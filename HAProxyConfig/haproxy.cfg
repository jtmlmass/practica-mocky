global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        #errorfile 400 /etc/haproxy/errors/400.http
        #errorfile 403 /etc/haproxy/errors/403.http
        #errorfile 408 /etc/haproxy/errors/408.http
        #errorfile 500 /etc/haproxy/errors/500.http
        #errorfile 502 /etc/haproxy/errors/502.http
        #errorfile 503 /etc/haproxy/errors/503.http
        #errorfile 504 /etc/haproxy/errors/504.http

# listen aplicacion_web
#    bind *:80
#      mode http
#      stats enable
#      stats uri /stats
#      stats realm HAProxy\ Statistics
#      stats auth cda:cda
#      balance roundrobin
#      server mocky-frontend1 localhost:3000 check maxconn 4000 fall 3 cookie L1 #Para validar la conexion con los puntos.
#      #server app-02 localhost:8081 check maxconn 4000 fall 3 cookie L2 #Para validar la conexión con los puntos.
#      #server app-03 localhost:8082 check maxconn 4000 fall 3 cookie L3 #Para validar la conexión con los puntos.


frontend web_app
        bind *:80
        #http-request redirect scheme https unless { ssl_fc }
        use_backend back_servers if { path -i -m beg /mock/ } || { path -i -m beg /auth/login }
        default_backend web_servers

backend web_servers
        balance roundrobin
        cookie SERVERID insert indirect nocache
        server app-1 mocky-frontend1:3000
        server app-2 mocky-frontend2:3001
        server app-3 mocky-frontend3:3002

backend back_servers
        balance roundrobin
        cookie SERVERID insert indirect nocache
        server back-1 mocky-app1:8080
        server back-2 mocky-app2:8081
        server back-3 mocky-app3:8082

